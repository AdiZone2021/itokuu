{"version":3,"sources":["components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","Login","error","useState","name","email","password","details","setDetails","onSubmit","e","preventDefault","className","htmlFor","placeholder","type","id","onChange","target","value","App","adminUser","user","setUser","setError","with","height","controls","url","onClick","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAkCeA,MAhCf,YAAqC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACxB,EAA8BC,mBAAS,CAACC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAvE,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OACI,sBAAMC,SAPY,SAAAC,GAClBA,EAAEC,iBAEFV,EAAMM,IAIN,SACI,sBAAKK,UAAU,aAAf,UACI,kFACe,IAATV,EAAgB,qBAAKU,UAAU,QAAf,SAAwBV,IAAe,GACzD,sBAAKU,UAAU,aAAf,UACI,uBAAOC,QAAQ,OAAf,0DACA,uBAAOC,YAAY,iCAAQC,KAAK,OAAOX,KAAK,OAAOY,GAAG,OAAOC,SAAU,SAAAP,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcH,KAAMM,EAAEQ,OAAOC,UAASA,MAAOZ,EAAQH,UAE/I,sBAAKQ,UAAU,aAAf,UACI,uBAAOC,QAAQ,QAAf,gHACA,uBAAOC,YAAY,oGAAoBC,KAAK,QAAQX,KAAK,QAAQY,GAAG,QAAQC,SAAU,SAAAP,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcF,MAAOK,EAAEQ,OAAOC,UAASA,MAAOZ,EAAQF,WAE/J,sBAAKO,UAAU,aAAf,UACI,uBAAOC,QAAQ,WAAf,mDACA,uBAAOC,YAAY,uCAASC,KAAK,WAAWX,KAAK,WAAWY,GAAG,WAAWC,SAAU,SAAAP,GAAC,OAAIF,EAAW,2BAAID,GAAL,IAAcD,SAAUI,EAAEQ,OAAOC,UAASA,MAAOZ,EAAQD,cAE5J,uBAAOS,KAAK,SAASI,MAAM,gB,iBCuBpCC,MA9Cf,WACE,IAAMC,EACG,cADHA,EAEM,YAGZ,EAAwBlB,mBAAS,CAACC,KAAK,GAAIC,MAAM,KAAjD,mBAAOiB,EAAP,KAAaC,EAAb,KACA,EAA0BpB,mBAAS,IAAnC,mBAAOD,EAAP,KAAcsB,EAAd,KAsBA,OACE,qBAAKZ,UAAU,MAAf,SACiB,IAAbU,EAAKjB,MACL,sBAAKO,UAAU,UAAf,UACE,2CAAa,+BAAOU,EAAKlB,UACzB,qBAAKQ,UAAU,SAAf,SACA,cAAC,IAAD,CAAaa,KAAK,QAAQC,OAAO,QAAQC,UAAQ,EAACC,IAAI,mCAEpD,wBAAQC,QAZH,WACbN,EAAQ,CAACnB,KAAK,GAAIC,MAAM,MAWhB,uBAGN,cAAC,EAAD,CAAWJ,MA/BD,SAAAM,GACZuB,QAAQC,IAAIxB,GAERA,EAAQF,OAASgB,GAAmBd,EAAQD,UAAYe,GACxDS,QAAQC,IAAI,aACZR,EAAQ,CACNnB,KAAKG,EAAQH,KACbC,MAAME,EAAQF,UAGhByB,QAAQC,IAAI,yBACZP,EAAS,oJAoBctB,MAAOA,OCjCvB8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4919619b.chunk.js","sourcesContent":["import React, { useState} from 'react'\n\nfunction LoginForm({ Login, error}) {\n    const [details, setDetails] = useState({name: \"\", email: \"\", password: \"\",});\n\n    const submitHandler = e=>{\n        e.preventDefault();\n\n        Login(details)\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"form-inner\">\n                <h2>Катталуу</h2>\n                    {(error != \"\") ? (<div className=\"error\">{error}</div>): \"\"}\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Аты жону:</label>\n                        <input placeholder=\"Логин\" type=\"text\" name=\"name\" id=\"name\" onChange={e => setDetails({...details, name: e.target.value})} value={details.name} /> \n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Электрондук почта:</label>\n                        <input placeholder=\"Электрондук почта\" type=\"email\" name=\"email\" id=\"email\" onChange={e => setDetails({...details, email: e.target.value})} value={details.email} />    \n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Пароль:</label>\n                        <input placeholder=\"Пароль\" type=\"password\" name=\"password\" id=\"password\" onChange={e => setDetails({...details, password: e.target.value})} value={details.password} /> \n                    </div>\n                        <input type=\"submit\" value=\"LOGIN\"/>\n            </div>\n        </form>\n    )\n}\n\nexport default LoginForm\n","import React, { useState } from 'react';\nimport LoginForm from './components/LoginForm.js';\nimport ReactPlayer from 'react-player'\n\n\nfunction App() {\n  const adminUser = {\n    email: \"Okuu@it.com\",\n    password: \"nomad2023\"\n  }\n\n  const [user, setUser] = useState({name:\"\", email:\"\"});\n  const [error, setError] = useState(\"\");\n\n  const Login = details => {\n    console.log(details);\n\n    if (details.email == adminUser.email && details.password == adminUser.password){\n        console.log(\"Logged in\");\n        setUser({\n          name:details.name,\n          email:details.email,\n        });\n  } else{\n        console.log(\"Details do not match!\");\n        setError(\"Маалыматтар дал келген жок!\");\n    }\n  }\n  \n  \n  const Logout = () => {\n    setUser({name:\"\", email:\"\" });\n  }\n  \n  return (\n    <div className=\"App\">\n      {(user.email !=\"\")?(\n        <div className=\"welcome\">\n          <h2>Welcome, <span>{user.name}</span></h2>\n          <div className=\"player\"> \n          <ReactPlayer with='100px' height='300px' controls url='https://youtu.be/OtJkXuqyjkk' />\n          </div>\n            <button onClick={Logout}>Logout</button>\n        </div>\n      ):(\n      <LoginForm Login={Login} error={error} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}